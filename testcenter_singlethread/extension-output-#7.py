# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\testcenter20190116备份（增加qtextedit中进行发送命令）\testcenter20190102备份\testcenter\testcenter_pyqt5\MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(775, 645)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(40, 80))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/RuiJie.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStatusTip("")
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalGroupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.verticalGroupBox_2.setObjectName("verticalGroupBox_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalGroupBox_2)
        self.verticalLayout_2.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.verticalGroupBox_2)
        self.plainTextEdit.setPlainText("")
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.verticalLayout_2.addWidget(self.plainTextEdit)
        self.gridLayout.addWidget(self.verticalGroupBox_2, 5, 0, 6, 3)
        self.hex_receive = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hex_receive.sizePolicy().hasHeightForWidth())
        self.hex_receive.setSizePolicy(sizePolicy)
        self.hex_receive.setObjectName("hex_receive")
        self.gridLayout.addWidget(self.hex_receive, 6, 3, 1, 1)
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox.sizePolicy().hasHeightForWidth())
        self.checkBox.setSizePolicy(sizePolicy)
        self.checkBox.setObjectName("checkBox")
        self.gridLayout.addWidget(self.checkBox, 8, 3, 1, 1)
        self.timer_send_checkbox = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.timer_send_checkbox.sizePolicy().hasHeightForWidth())
        self.timer_send_checkbox.setSizePolicy(sizePolicy)
        self.timer_send_checkbox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.timer_send_checkbox.setObjectName("timer_send_checkbox")
        self.gridLayout.addWidget(self.timer_send_checkbox, 14, 0, 1, 1)
        self.closeWinBtn = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.closeWinBtn.sizePolicy().hasHeightForWidth())
        self.closeWinBtn.setSizePolicy(sizePolicy)
        self.closeWinBtn.setObjectName("closeWinBtn")
        self.gridLayout.addWidget(self.closeWinBtn, 14, 3, 1, 1)
        self.clear_button = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.clear_button.sizePolicy().hasHeightForWidth())
        self.clear_button.setSizePolicy(sizePolicy)
        self.clear_button.setObjectName("clear_button")
        self.gridLayout.addWidget(self.clear_button, 5, 3, 1, 1)
        self.btnSaveLog = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnSaveLog.sizePolicy().hasHeightForWidth())
        self.btnSaveLog.setSizePolicy(sizePolicy)
        self.btnSaveLog.setObjectName("btnSaveLog")
        self.gridLayout.addWidget(self.btnSaveLog, 10, 3, 1, 1)
        self.send_button = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.send_button.sizePolicy().hasHeightForWidth())
        self.send_button.setSizePolicy(sizePolicy)
        self.send_button.setStyleSheet("color: rgb(0, 85, 255);\n"
"QFrame QPushButton#send_button:hover { color: red }\n"
" ")
        self.send_button.setObjectName("send_button")
        self.gridLayout.addWidget(self.send_button, 9, 3, 1, 1)
        self.timer_lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.timer_lineEdit.sizePolicy().hasHeightForWidth())
        self.timer_lineEdit.setSizePolicy(sizePolicy)
        self.timer_lineEdit.setMaximumSize(QtCore.QSize(80, 16777215))
        self.timer_lineEdit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.timer_lineEdit.setObjectName("timer_lineEdit")
        self.gridLayout.addWidget(self.timer_lineEdit, 14, 1, 1, 1)
        self.dw = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dw.sizePolicy().hasHeightForWidth())
        self.dw.setSizePolicy(sizePolicy)
        self.dw.setMaximumSize(QtCore.QSize(50, 16777215))
        self.dw.setObjectName("dw")
        self.gridLayout.addWidget(self.dw, 14, 2, 1, 1)
        self.hex_send = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hex_send.sizePolicy().hasHeightForWidth())
        self.hex_send.setSizePolicy(sizePolicy)
        self.hex_send.setObjectName("hex_send")
        self.gridLayout.addWidget(self.hex_send, 7, 3, 1, 1)
        self.console_terminal = QtWidgets.QTextEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.console_terminal.sizePolicy().hasHeightForWidth())
        self.console_terminal.setSizePolicy(sizePolicy)
        self.console_terminal.setMinimumSize(QtCore.QSize(40, 80))
        self.console_terminal.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.console_terminal.setAutoFillBackground(True)
        self.console_terminal.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.console_terminal.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.console_terminal.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.console_terminal.setObjectName("console_terminal")
        self.gridLayout.addWidget(self.console_terminal, 0, 0, 5, 4)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 775, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        self.scripts = QtWidgets.QMenu(self.menu_3)
        self.scripts.setObjectName("scripts")
        self.menu_4 = QtWidgets.QMenu(self.menubar)
        self.menu_4.setObjectName("menu_4")
        self.menu_5 = QtWidgets.QMenu(self.menubar)
        self.menu_5.setObjectName("menu_5")
        self.menu_6 = QtWidgets.QMenu(self.menubar)
        self.menu_6.setObjectName("menu_6")
        self.menu_7 = QtWidgets.QMenu(self.menubar)
        self.menu_7.setObjectName("menu_7")
        self.actionCreateTest = QtWidgets.QMenu(self.menu_7)
        self.actionCreateTest.setObjectName("actionCreateTest")
        self.menu_9 = QtWidgets.QMenu(self.menubar)
        self.menu_9.setObjectName("menu_9")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.comSetting = QtWidgets.QDockWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comSetting.sizePolicy().hasHeightForWidth())
        self.comSetting.setSizePolicy(sizePolicy)
        self.comSetting.setMinimumSize(QtCore.QSize(160, 80))
        self.comSetting.setMaximumSize(QtCore.QSize(500, 524287))
        self.comSetting.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.comSetting.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.comSetting.setObjectName("comSetting")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.protocalSetting = QtWidgets.QToolBox(self.dockWidgetContents)
        self.protocalSetting.setGeometry(QtCore.QRect(0, 0, 160, 571))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.protocalSetting.sizePolicy().hasHeightForWidth())
        self.protocalSetting.setSizePolicy(sizePolicy)
        self.protocalSetting.setMinimumSize(QtCore.QSize(160, 0))
        self.protocalSetting.setMaximumSize(QtCore.QSize(500, 16777215))
        self.protocalSetting.setStyleSheet("")
        self.protocalSetting.setObjectName("protocalSetting")
        self.page = QtWidgets.QWidget()
        self.page.setGeometry(QtCore.QRect(0, 0, 160, 519))
        self.page.setObjectName("page")
        self.formGroupBox = QtWidgets.QGroupBox(self.page)
        self.formGroupBox.setGeometry(QtCore.QRect(0, -10, 167, 521))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.formGroupBox.sizePolicy().hasHeightForWidth())
        self.formGroupBox.setSizePolicy(sizePolicy)
        self.formGroupBox.setMaximumSize(QtCore.QSize(167, 16777215))
        self.formGroupBox.setTitle("")
        self.formGroupBox.setObjectName("formGroupBox")
        self.formLayout_2 = QtWidgets.QFormLayout(self.formGroupBox)
        self.formLayout_2.setContentsMargins(10, 10, 10, 10)
        self.formLayout_2.setSpacing(10)
        self.formLayout_2.setObjectName("formLayout_2")
        self.s1__lb_7 = QtWidgets.QLabel(self.formGroupBox)
        self.s1__lb_7.setObjectName("s1__lb_7")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.s1__lb_7)
        self.check_com = QtWidgets.QPushButton(self.formGroupBox)
        self.check_com.setAutoRepeatInterval(100)
        self.check_com.setDefault(True)
        self.check_com.setObjectName("check_com")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.check_com)
        self.s1__lb_8 = QtWidgets.QLabel(self.formGroupBox)
        self.s1__lb_8.setObjectName("s1__lb_8")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.s1__lb_8)
        self.com_option = QtWidgets.QComboBox(self.formGroupBox)
        self.com_option.setObjectName("com_option")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.com_option)
        self.state_label_2 = QtWidgets.QLabel(self.formGroupBox)
        self.state_label_2.setText("")
        self.state_label_2.setTextFormat(QtCore.Qt.AutoText)
        self.state_label_2.setScaledContents(True)
        self.state_label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.state_label_2.setObjectName("state_label_2")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.SpanningRole, self.state_label_2)
        self.s1__lb_9 = QtWidgets.QLabel(self.formGroupBox)
        self.s1__lb_9.setObjectName("s1__lb_9")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.s1__lb_9)
        self.baud_rate_option = QtWidgets.QComboBox(self.formGroupBox)
        self.baud_rate_option.setObjectName("baud_rate_option")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.baud_rate_option.addItem("")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.baud_rate_option)
        self.s1__lb_10 = QtWidgets.QLabel(self.formGroupBox)
        self.s1__lb_10.setObjectName("s1__lb_10")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.s1__lb_10)
        self.data_bits = QtWidgets.QComboBox(self.formGroupBox)
        self.data_bits.setObjectName("data_bits")
        self.data_bits.addItem("")
        self.data_bits.addItem("")
        self.data_bits.addItem("")
        self.data_bits.addItem("")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.data_bits)
        self.s1__lb_12 = QtWidgets.QLabel(self.formGroupBox)
        self.s1__lb_12.setObjectName("s1__lb_12")
        self.formLayout_2.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.s1__lb_12)
        self.stop_bit = QtWidgets.QComboBox(self.formGroupBox)
        self.stop_bit.setObjectName("stop_bit")
        self.stop_bit.addItem("")
        self.stop_bit.addItem("")
        self.stop_bit.addItem("")
        self.stop_bit.addItem("")
        self.formLayout_2.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.stop_bit)
        self.s1__lb_11 = QtWidgets.QLabel(self.formGroupBox)
        self.s1__lb_11.setObjectName("s1__lb_11")
        self.formLayout_2.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.s1__lb_11)
        self.checksum_bits = QtWidgets.QComboBox(self.formGroupBox)
        self.checksum_bits.setObjectName("checksum_bits")
        self.checksum_bits.addItem("")
        self.checksum_bits.addItem("")
        self.checksum_bits.addItem("")
        self.checksum_bits.addItem("")
        self.checksum_bits.addItem("")
        self.checksum_bits.addItem("")
        self.formLayout_2.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.checksum_bits)
        self.open_close_buttom = QtWidgets.QPushButton(self.formGroupBox)
        self.open_close_buttom.setStyleSheet("font: 9pt \"黑体\";\n"
"color: rgb(0, 0, 255);\n"
"selection-color: qconicalgradient(cx:0, cy:0, angle:135, stop:0 rgba(255, 255, 0, 69), stop:0.375 rgba(255, 255, 0, 69), stop:0.423533 rgba(251, 255, 0, 145), stop:0.45 rgba(247, 255, 0, 208), stop:0.477581 rgba(255, 244, 71, 130), stop:0.518717 rgba(255, 218, 71, 130), stop:0.55 rgba(255, 255, 0, 255), stop:0.57754 rgba(255, 203, 0, 130), stop:0.625 rgba(255, 255, 0, 69), stop:1 rgba(255, 255, 0, 69));")
        self.open_close_buttom.setObjectName("open_close_buttom")
        self.formLayout_2.setWidget(10, QtWidgets.QFormLayout.SpanningRole, self.open_close_buttom)
        self.transceive_num_group = QtWidgets.QGroupBox(self.formGroupBox)
        self.transceive_num_group.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.transceive_num_group.sizePolicy().hasHeightForWidth())
        self.transceive_num_group.setSizePolicy(sizePolicy)
        self.transceive_num_group.setMaximumSize(QtCore.QSize(167, 16777215))
        self.transceive_num_group.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.transceive_num_group.setObjectName("transceive_num_group")
        self.formLayout_3 = QtWidgets.QFormLayout(self.transceive_num_group)
        self.formLayout_3.setContentsMargins(10, 10, 10, 10)
        self.formLayout_3.setSpacing(10)
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_2 = QtWidgets.QLabel(self.transceive_num_group)
        self.label_2.setObjectName("label_2")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.label_3 = QtWidgets.QLabel(self.transceive_num_group)
        self.label_3.setObjectName("label_3")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_3)
        self.total_receive = QtWidgets.QLineEdit(self.transceive_num_group)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.total_receive.sizePolicy().hasHeightForWidth())
        self.total_receive.setSizePolicy(sizePolicy)
        self.total_receive.setMaximumSize(QtCore.QSize(50, 16777215))
        self.total_receive.setObjectName("total_receive")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.total_receive)
        self.total_transmit = QtWidgets.QLineEdit(self.transceive_num_group)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.total_transmit.sizePolicy().hasHeightForWidth())
        self.total_transmit.setSizePolicy(sizePolicy)
        self.total_transmit.setMaximumSize(QtCore.QSize(50, 16777215))
        self.total_transmit.setObjectName("total_transmit")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.total_transmit)
        self.formLayout_2.setWidget(11, QtWidgets.QFormLayout.SpanningRole, self.transceive_num_group)
        self.label = QtWidgets.QLabel(self.formGroupBox)
        self.label.setObjectName("label")
        self.formLayout_2.setWidget(12, QtWidgets.QFormLayout.LabelRole, self.label)
        self.comboBox = QtWidgets.QComboBox(self.formGroupBox)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.formLayout_2.setWidget(12, QtWidgets.QFormLayout.FieldRole, self.comboBox)
        self.protocalSetting.addItem(self.page, "")
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setGeometry(QtCore.QRect(0, 0, 160, 519))
        self.page_2.setObjectName("page_2")
        self.treeWidget = QtWidgets.QTreeWidget(self.page_2)
        self.treeWidget.setGeometry(QtCore.QRect(0, 0, 181, 501))
        self.treeWidget.setMinimumSize(QtCore.QSize(160, 0))
        self.treeWidget.setMaximumSize(QtCore.QSize(500, 16777215))
        self.treeWidget.setBaseSize(QtCore.QSize(160, 0))
        self.treeWidget.setAcceptDrops(True)
        self.treeWidget.setObjectName("treeWidget")
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_2.setCheckState(0, QtCore.Qt.Unchecked)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_2.setCheckState(0, QtCore.Qt.Unchecked)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_2.setCheckState(0, QtCore.Qt.Unchecked)
        item_2 = QtWidgets.QTreeWidgetItem(item_1)
        item_2.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        self.protocalSetting.addItem(self.page_2, "")
        self.comSetting.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.comSetting)
        self.Sequencer = QtWidgets.QDockWidget(MainWindow)
        self.Sequencer.setEnabled(True)
        self.Sequencer.setMinimumSize(QtCore.QSize(80, 80))
        self.Sequencer.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.Sequencer.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.Sequencer.setObjectName("Sequencer")
        self.dockWidgetContents_3 = QtWidgets.QWidget()
        self.dockWidgetContents_3.setObjectName("dockWidgetContents_3")
        self.listWidget = QtWidgets.QListWidget(self.dockWidgetContents_3)
        self.listWidget.setGeometry(QtCore.QRect(0, 0, 256, 192))
        self.listWidget.setObjectName("listWidget")
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEditable|QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEditable|QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        item.setCheckState(QtCore.Qt.Checked)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEditable|QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        item.setCheckState(QtCore.Qt.Checked)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEditable|QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        item.setCheckState(QtCore.Qt.Checked)
        self.listWidget.addItem(item)
        self.treeWidget_2 = QtWidgets.QTreeWidget(self.dockWidgetContents_3)
        self.treeWidget_2.setGeometry(QtCore.QRect(0, 200, 256, 192))
        self.treeWidget_2.setObjectName("treeWidget_2")
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget_2)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget_2)
        item_0.setCheckState(0, QtCore.Qt.Checked)
        item_0.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEditable|QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget_2)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_1.setCheckState(0, QtCore.Qt.Checked)
        item_1 = QtWidgets.QTreeWidgetItem(item_0)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget_2)
        item_0.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsEditable|QtCore.Qt.ItemIsDragEnabled|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.tableWidget = QtWidgets.QTableWidget(self.dockWidgetContents_3)
        self.tableWidget.setGeometry(QtCore.QRect(0, 400, 256, 192))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setItem(4, 0, item)
        self.Sequencer.setWidget(self.dockWidgetContents_3)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.Sequencer)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionOPEN = QtWidgets.QAction(MainWindow)
        self.actionOPEN.setObjectName("actionOPEN")
        self.actionNEW = QtWidgets.QAction(MainWindow)
        self.actionNEW.setObjectName("actionNEW")
        self.actionCLOSE = QtWidgets.QAction(MainWindow)
        self.actionCLOSE.setObjectName("actionCLOSE")
        self.action_2 = QtWidgets.QAction(MainWindow)
        self.action_2.setObjectName("action_2")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setObjectName("action_3")
        self.actionfuzhi = QtWidgets.QAction(MainWindow)
        self.actionfuzhi.setObjectName("actionfuzhi")
        self.actionniat = QtWidgets.QAction(MainWindow)
        self.actionniat.setObjectName("actionniat")
        self.actionVBScript = QtWidgets.QAction(MainWindow)
        self.actionVBScript.setObjectName("actionVBScript")
        self.actionJavaScript = QtWidgets.QAction(MainWindow)
        self.actionJavaScript.setObjectName("actionJavaScript")
        self.actionPython = QtWidgets.QAction(MainWindow)
        self.actionPython.setObjectName("actionPython")
        self.menuComSetting = QtWidgets.QAction(MainWindow)
        self.menuComSetting.setObjectName("menuComSetting")
        self.actionshuo = QtWidgets.QAction(MainWindow)
        self.actionshuo.setObjectName("actionshuo")
        self.actiongu = QtWidgets.QAction(MainWindow)
        self.actiongu.setObjectName("actiongu")
        self.menuComSearch = QtWidgets.QAction(MainWindow)
        self.menuComSearch.setObjectName("menuComSearch")
        self.actionShowToolBar = QtWidgets.QAction(MainWindow)
        self.actionShowToolBar.setCheckable(True)
        self.actionShowToolBar.setChecked(True)
        self.actionShowToolBar.setObjectName("actionShowToolBar")
        self.actionQuickTest = QtWidgets.QAction(MainWindow)
        self.actionQuickTest.setObjectName("actionQuickTest")
        self.actionIntelligentTest = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("C:/Users/seeker/.designer/backup/AI1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionIntelligentTest.setIcon(icon1)
        self.actionIntelligentTest.setObjectName("actionIntelligentTest")
        self.actionvlan = QtWidgets.QAction(MainWindow)
        self.actionvlan.setObjectName("actionvlan")
        self.actionvlan_2 = QtWidgets.QAction(MainWindow)
        self.actionvlan_2.setObjectName("actionvlan_2")
        self.active_sequencer = QtWidgets.QAction(MainWindow)
        self.active_sequencer.setCheckable(True)
        self.active_sequencer.setChecked(True)
        self.active_sequencer.setEnabled(True)
        self.active_sequencer.setObjectName("active_sequencer")
        self.active_serial_setting = QtWidgets.QAction(MainWindow)
        self.active_serial_setting.setCheckable(True)
        self.active_serial_setting.setChecked(True)
        self.active_serial_setting.setObjectName("active_serial_setting")
        self.actionSendCommand = QtWidgets.QAction(MainWindow)
        self.actionSendCommand.setObjectName("actionSendCommand")
        self.actionCharactorRecognition = QtWidgets.QAction(MainWindow)
        self.actionCharactorRecognition.setObjectName("actionCharactorRecognition")
        self.actionDelay = QtWidgets.QAction(MainWindow)
        self.actionDelay.setObjectName("actionDelay")
        self.actionAddTest = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/Graphics/images/AddTest.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionAddTest.setIcon(icon2)
        self.actionAddTest.setObjectName("actionAddTest")
        self.actionSettingDelay = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/Graphics/images/Delay.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSettingDelay.setIcon(icon3)
        self.actionSettingDelay.setObjectName("actionSettingDelay")
        self.actionLogRecognition = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/Graphics/images/ScanText.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionLogRecognition.setIcon(icon4)
        self.actionLogRecognition.setObjectName("actionLogRecognition")
        self.actionSpecialTest = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/Graphics/images/SpecialTest.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionSpecialTest.setIcon(icon5)
        self.actionSpecialTest.setObjectName("actionSpecialTest")
        self.actionExpertScan = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/Graphics/images/ExpertScan.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionExpertScan.setIcon(icon6)
        self.actionExpertScan.setObjectName("actionExpertScan")
        self.actionDeleteTest = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/Graphics/images/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionDeleteTest.setIcon(icon7)
        self.actionDeleteTest.setObjectName("actionDeleteTest")
        self.actionSpecialTest_2 = QtWidgets.QAction(MainWindow)
        self.actionSpecialTest_2.setObjectName("actionSpecialTest_2")
        self.actionExpertScan_2 = QtWidgets.QAction(MainWindow)
        self.actionExpertScan_2.setObjectName("actionExpertScan_2")
        self.actionDeleteTest_2 = QtWidgets.QAction(MainWindow)
        self.actionDeleteTest_2.setObjectName("actionDeleteTest_2")
        self.menuTelnetSetting = QtWidgets.QAction(MainWindow)
        self.menuTelnetSetting.setObjectName("menuTelnetSetting")
        self.menu.addAction(self.actionOPEN)
        self.menu.addAction(self.actionNEW)
        self.menu.addAction(self.actionCLOSE)
        self.menu_2.addAction(self.actionfuzhi)
        self.menu_2.addAction(self.actionniat)
        self.scripts.addAction(self.actionVBScript)
        self.scripts.addAction(self.actionJavaScript)
        self.scripts.addAction(self.actionPython)
        self.menu_3.addAction(self.scripts.menuAction())
        self.menu_4.addAction(self.menuComSetting)
        self.menu_4.addAction(self.menuTelnetSetting)
        self.menu_4.addAction(self.menuComSearch)
        self.menu_4.addAction(self.actionShowToolBar)
        self.menu_5.addAction(self.actionvlan)
        self.menu_5.addAction(self.actionvlan_2)
        self.menu_6.addAction(self.actionshuo)
        self.menu_6.addAction(self.actiongu)
        self.actionCreateTest.addAction(self.actionSendCommand)
        self.actionCreateTest.addAction(self.actionDelay)
        self.actionCreateTest.addAction(self.actionCharactorRecognition)
        self.actionCreateTest.addAction(self.actionSpecialTest_2)
        self.actionCreateTest.addAction(self.actionExpertScan_2)
        self.actionCreateTest.addAction(self.actionDeleteTest_2)
        self.menu_7.addAction(self.actionCreateTest.menuAction())
        self.menu_7.addSeparator()
        self.menu_7.addAction(self.actionQuickTest)
        self.menu_7.addAction(self.actionIntelligentTest)
        self.menu_9.addAction(self.active_sequencer)
        self.menu_9.addAction(self.active_serial_setting)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_9.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())
        self.menubar.addAction(self.menu_4.menuAction())
        self.menubar.addAction(self.menu_5.menuAction())
        self.menubar.addAction(self.menu_6.menuAction())
        self.menubar.addAction(self.menu_7.menuAction())
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAddTest)
        self.toolBar.addAction(self.actionSettingDelay)
        self.toolBar.addAction(self.actionLogRecognition)
        self.toolBar.addAction(self.actionSpecialTest)
        self.toolBar.addAction(self.actionExpertScan)
        self.toolBar.addAction(self.actionDeleteTest)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        self.protocalSetting.setCurrentIndex(0)
        self.closeWinBtn.clicked.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "自动化测试平台"))
        self.verticalGroupBox_2.setTitle(_translate("MainWindow", "发送区"))
        self.hex_receive.setText(_translate("MainWindow", "Hex接收"))
        self.checkBox.setText(_translate("MainWindow", "发送新行"))
        self.timer_send_checkbox.setText(_translate("MainWindow", "定时发送"))
        self.closeWinBtn.setText(_translate("MainWindow", "关闭窗口"))
        self.clear_button.setText(_translate("MainWindow", "清除屏幕"))
        self.btnSaveLog.setText(_translate("MainWindow", "保存log"))
        self.send_button.setText(_translate("MainWindow", "手动发送"))
        self.send_button.setShortcut(_translate("MainWindow", "Ctrl+Return"))
        self.timer_lineEdit.setText(_translate("MainWindow", "1000"))
        self.dw.setText(_translate("MainWindow", "ms/次"))
        self.hex_send.setText(_translate("MainWindow", "Hex发送"))
        self.menu.setTitle(_translate("MainWindow", "文件&F"))
        self.menu_2.setTitle(_translate("MainWindow", "编辑&E"))
        self.menu_3.setTitle(_translate("MainWindow", "脚本&P"))
        self.scripts.setTitle(_translate("MainWindow", "运行脚本"))
        self.menu_4.setTitle(_translate("MainWindow", "设置&S"))
        self.menu_5.setTitle(_translate("MainWindow", "工具&T"))
        self.menu_6.setTitle(_translate("MainWindow", "帮助&H"))
        self.menu_7.setTitle(_translate("MainWindow", "测试向导&W"))
        self.actionCreateTest.setTitle(_translate("MainWindow", "创建测试"))
        self.menu_9.setTitle(_translate("MainWindow", "显示"))
        self.s1__lb_7.setText(_translate("MainWindow", "串口检测："))
        self.check_com.setText(_translate("MainWindow", "检测串口"))
        self.s1__lb_8.setText(_translate("MainWindow", "串口选择："))
        self.s1__lb_9.setText(_translate("MainWindow", "波特率："))
        self.baud_rate_option.setItemText(0, _translate("MainWindow", "9600"))
        self.baud_rate_option.setItemText(1, _translate("MainWindow", "115200"))
        self.baud_rate_option.setItemText(2, _translate("MainWindow", "57600"))
        self.baud_rate_option.setItemText(3, _translate("MainWindow", "2400"))
        self.baud_rate_option.setItemText(4, _translate("MainWindow", "4800"))
        self.baud_rate_option.setItemText(5, _translate("MainWindow", "14400"))
        self.baud_rate_option.setItemText(6, _translate("MainWindow", "19200"))
        self.baud_rate_option.setItemText(7, _translate("MainWindow", "38400"))
        self.baud_rate_option.setItemText(8, _translate("MainWindow", "76800"))
        self.baud_rate_option.setItemText(9, _translate("MainWindow", "12800"))
        self.baud_rate_option.setItemText(10, _translate("MainWindow", "230400"))
        self.baud_rate_option.setItemText(11, _translate("MainWindow", "460800"))
        self.s1__lb_10.setText(_translate("MainWindow", "数据位："))
        self.data_bits.setItemText(0, _translate("MainWindow", "8"))
        self.data_bits.setItemText(1, _translate("MainWindow", "7"))
        self.data_bits.setItemText(2, _translate("MainWindow", "6"))
        self.data_bits.setItemText(3, _translate("MainWindow", "5"))
        self.s1__lb_12.setText(_translate("MainWindow", "停止位："))
        self.stop_bit.setItemText(0, _translate("MainWindow", "OneStop"))
        self.stop_bit.setItemText(1, _translate("MainWindow", "OneAndHalfStop"))
        self.stop_bit.setItemText(2, _translate("MainWindow", "TwoStop"))
        self.stop_bit.setItemText(3, _translate("MainWindow", "UnknownStopBits"))
        self.s1__lb_11.setText(_translate("MainWindow", "校验位："))
        self.checksum_bits.setItemText(0, _translate("MainWindow", "No"))
        self.checksum_bits.setItemText(1, _translate("MainWindow", "Even"))
        self.checksum_bits.setItemText(2, _translate("MainWindow", "Odd"))
        self.checksum_bits.setItemText(3, _translate("MainWindow", "Space"))
        self.checksum_bits.setItemText(4, _translate("MainWindow", "Mark"))
        self.checksum_bits.setItemText(5, _translate("MainWindow", "Unknown"))
        self.open_close_buttom.setText(_translate("MainWindow", "点击打开串口"))
        self.transceive_num_group.setTitle(_translate("MainWindow", "串口状态"))
        self.label_2.setText(_translate("MainWindow", "已接收："))
        self.label_3.setText(_translate("MainWindow", "已发送："))
        self.label.setText(_translate("MainWindow", "终端编码："))
        self.comboBox.setItemText(0, _translate("MainWindow", "GB2312"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Default"))
        self.comboBox.setItemText(2, _translate("MainWindow", "UTF-8"))
        self.protocalSetting.setItemText(self.protocalSetting.indexOf(self.page), _translate("MainWindow", "串口设置"))
        self.treeWidget.headerItem().setText(0, _translate("MainWindow", "测试项"))
        __sortingEnabled = self.treeWidget.isSortingEnabled()
        self.treeWidget.setSortingEnabled(False)
        self.treeWidget.topLevelItem(0).setText(0, _translate("MainWindow", "Box交换机"))
        self.treeWidget.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "版本信息文档check"))
        self.treeWidget.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "软硬件版本槽位信息等"))
        self.treeWidget.topLevelItem(0).child(2).setText(0, _translate("MainWindow", "cpld版本查看"))
        self.treeWidget.topLevelItem(0).child(3).setText(0, _translate("MainWindow", "dir信息"))
        self.treeWidget.topLevelItem(0).child(4).setText(0, _translate("MainWindow", "RTC时钟"))
        self.treeWidget.topLevelItem(0).child(5).setText(0, _translate("MainWindow", "MAC芯片内部存储器"))
        self.treeWidget.topLevelItem(0).child(6).setText(0, _translate("MainWindow", "MAC地址测试"))
        self.treeWidget.topLevelItem(0).child(7).setText(0, _translate("MainWindow", "POE测试"))
        self.treeWidget.topLevelItem(0).child(8).setText(0, _translate("MainWindow", "端口速率配置"))
        self.treeWidget.topLevelItem(0).child(9).setText(0, _translate("MainWindow", "扩展模块测试"))
        self.treeWidget.topLevelItem(0).child(10).setText(0, _translate("MainWindow", "连通性测试"))
        self.treeWidget.topLevelItem(0).child(11).setText(0, _translate("MainWindow", "cpld在线升级"))
        self.treeWidget.topLevelItem(0).child(12).setText(0, _translate("MainWindow", "风扇模块测试"))
        self.treeWidget.topLevelItem(0).child(13).setText(0, _translate("MainWindow", "电源模块测试"))
        self.treeWidget.topLevelItem(0).child(14).setText(0, _translate("MainWindow", "USB接口测试"))
        self.treeWidget.topLevelItem(0).child(14).child(0).setText(0, _translate("MainWindow", "U盘读写"))
        self.treeWidget.topLevelItem(0).child(14).child(1).setText(0, _translate("MainWindow", "U盘兼容性"))
        self.treeWidget.topLevelItem(0).child(14).child(2).setText(0, _translate("MainWindow", "U盘常规测试"))
        self.treeWidget.topLevelItem(0).child(14).child(3).setText(0, _translate("MainWindow", "U盘非常规测试"))
        self.treeWidget.topLevelItem(0).child(15).setText(0, _translate("MainWindow", "SD接口测试"))
        self.treeWidget.topLevelItem(0).child(16).setText(0, _translate("MainWindow", "复位测试"))
        self.treeWidget.topLevelItem(0).child(17).setText(0, _translate("MainWindow", "reset键测试"))
        self.treeWidget.topLevelItem(0).child(18).setText(0, _translate("MainWindow", "黏贴命令测试"))
        self.treeWidget.topLevelItem(0).child(19).setText(0, _translate("MainWindow", "指示灯测试"))
        self.treeWidget.topLevelItem(0).child(20).setText(0, _translate("MainWindow", "VSL链路测试"))
        self.treeWidget.topLevelItem(0).child(21).setText(0, _translate("MainWindow", "MGMT口生测下测试"))
        self.treeWidget.topLevelItem(0).child(22).setText(0, _translate("MainWindow", "整机测试说明文档附加测试"))
        self.treeWidget.topLevelItem(0).child(23).setText(0, _translate("MainWindow", "寄存器基线测试"))
        self.treeWidget.topLevelItem(0).child(24).setText(0, _translate("MainWindow", "端口预加重测试"))
        self.treeWidget.setSortingEnabled(__sortingEnabled)
        self.protocalSetting.setItemText(self.protocalSetting.indexOf(self.page_2), _translate("MainWindow", "主程序测试"))
        self.Sequencer.setWindowTitle(_translate("MainWindow", "测试序列"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)
        item = self.listWidget.item(0)
        item.setText(_translate("MainWindow", "en"))
        item = self.listWidget.item(1)
        item.setText(_translate("MainWindow", "con"))
        item = self.listWidget.item(2)
        item.setText(_translate("MainWindow", "show ver "))
        item = self.listWidget.item(3)
        item.setText(_translate("MainWindow", "sh ver sl"))
        item = self.listWidget.item(4)
        item.setText(_translate("MainWindow", "sh manu "))
        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.treeWidget_2.headerItem().setText(0, _translate("MainWindow", "command"))
        self.treeWidget_2.headerItem().setText(1, _translate("MainWindow", "meaning"))
        self.treeWidget_2.headerItem().setText(2, _translate("MainWindow", "notes"))
        self.treeWidget_2.headerItem().setText(3, _translate("MainWindow", "reserve "))
        __sortingEnabled = self.treeWidget_2.isSortingEnabled()
        self.treeWidget_2.setSortingEnabled(False)
        self.treeWidget_2.topLevelItem(0).setText(0, _translate("MainWindow", "show"))
        self.treeWidget_2.topLevelItem(0).setText(1, _translate("MainWindow", "显示"))
        self.treeWidget_2.topLevelItem(0).setText(2, _translate("MainWindow", "备注"))
        self.treeWidget_2.topLevelItem(0).setText(3, _translate("MainWindow", "保留"))
        self.treeWidget_2.topLevelItem(1).setText(0, _translate("MainWindow", "manu "))
        self.treeWidget_2.topLevelItem(2).setText(0, _translate("MainWindow", "temp"))
        self.treeWidget_2.topLevelItem(2).child(0).setText(0, _translate("MainWindow", "pow temp"))
        self.treeWidget_2.topLevelItem(2).child(1).setText(0, _translate("MainWindow", "pow detail"))
        self.treeWidget_2.topLevelItem(3).setText(0, _translate("MainWindow", "New Item"))
        self.treeWidget_2.setSortingEnabled(__sortingEnabled)
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "command"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "tip"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "time"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "notes"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "reserve"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.item(0, 0)
        item.setText(_translate("MainWindow", "en"))
        item = self.tableWidget.item(1, 0)
        item.setText(_translate("MainWindow", "con"))
        item = self.tableWidget.item(2, 0)
        item.setText(_translate("MainWindow", "show ver"))
        item = self.tableWidget.item(3, 0)
        item.setText(_translate("MainWindow", "sh ver sl"))
        item = self.tableWidget.item(4, 0)
        item.setText(_translate("MainWindow", "show manu "))
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionOPEN.setText(_translate("MainWindow", "打开文件"))
        self.actionOPEN.setToolTip(_translate("MainWindow", "打开文件"))
        self.actionOPEN.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionNEW.setText(_translate("MainWindow", "新建测试项目"))
        self.actionNEW.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionCLOSE.setText(_translate("MainWindow", "保存项目"))
        self.actionCLOSE.setToolTip(_translate("MainWindow", "保存项目"))
        self.actionCLOSE.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_2.setText(_translate("MainWindow", "新建测试项"))
        self.action_2.setToolTip(_translate("MainWindow", "新建测试项"))
        self.action_3.setText(_translate("MainWindow", "保存测试"))
        self.actionfuzhi.setText(_translate("MainWindow", "复制"))
        self.actionniat.setText(_translate("MainWindow", "黏贴"))
        self.actionVBScript.setText(_translate("MainWindow", "VBScript"))
        self.actionJavaScript.setText(_translate("MainWindow", "JavaScript"))
        self.actionPython.setText(_translate("MainWindow", "Python"))
        self.menuComSetting.setText(_translate("MainWindow", "串口设置"))
        self.actionshuo.setText(_translate("MainWindow", "说明文档"))
        self.actiongu.setText(_translate("MainWindow", "联系我们"))
        self.menuComSearch.setText(_translate("MainWindow", "搜索串口"))
        self.actionShowToolBar.setText(_translate("MainWindow", "显示工具栏"))
        self.actionQuickTest.setText(_translate("MainWindow", "快速测试"))
        self.actionIntelligentTest.setText(_translate("MainWindow", "智能测试"))
        self.actionvlan.setText(_translate("MainWindow", "vlan配置"))
        self.actionvlan_2.setText(_translate("MainWindow", "vlan智能配置"))
        self.active_sequencer.setText(_translate("MainWindow", "激活测试命令序列"))
        self.active_serial_setting.setText(_translate("MainWindow", "激活串口设置"))
        self.actionSendCommand.setText(_translate("MainWindow", "发送命令"))
        self.actionCharactorRecognition.setText(_translate("MainWindow", "简单log识别"))
        self.actionDelay.setText(_translate("MainWindow", "增加延时"))
        self.actionAddTest.setText(_translate("MainWindow", "创建发送测试命令"))
        self.actionAddTest.setToolTip(_translate("MainWindow", "创建发送测试命令"))
        self.actionAddTest.setShortcut(_translate("MainWindow", "Alt+A"))
        self.actionSettingDelay.setText(_translate("MainWindow", "设置延时"))
        self.actionSettingDelay.setToolTip(_translate("MainWindow", "设置延时"))
        self.actionSettingDelay.setShortcut(_translate("MainWindow", "Alt+D"))
        self.actionLogRecognition.setText(_translate("MainWindow", "设置log识别内容"))
        self.actionLogRecognition.setToolTip(_translate("MainWindow", "设置log识别内容"))
        self.actionLogRecognition.setShortcut(_translate("MainWindow", "Alt+R"))
        self.actionSpecialTest.setText(_translate("MainWindow", "添加特殊测试"))
        self.actionSpecialTest.setToolTip(_translate("MainWindow", "添加特殊测试"))
        self.actionSpecialTest.setShortcut(_translate("MainWindow", "Alt+T"))
        self.actionExpertScan.setText(_translate("MainWindow", "高级log识别"))
        self.actionExpertScan.setToolTip(_translate("MainWindow", "高级log识别"))
        self.actionExpertScan.setShortcut(_translate("MainWindow", "Alt+F, Ctrl+F"))
        self.actionDeleteTest.setText(_translate("MainWindow", "删除选中测试"))
        self.actionDeleteTest.setToolTip(_translate("MainWindow", "删除选中测试"))
        self.actionSpecialTest_2.setText(_translate("MainWindow", "添加特殊测试"))
        self.actionExpertScan_2.setText(_translate("MainWindow", "高级log识别"))
        self.actionDeleteTest_2.setText(_translate("MainWindow", "删除单项测试"))
        self.menuTelnetSetting.setText(_translate("MainWindow", "Telnet设置"))

import iconresource_rc
